
            } // Template: NPCLevel3BBury_cs.txt
            if (NeoTrace.RUNTIME) LogExt("Bury(bkey).#CLASSNAME#", e); 
            return e; // return Entity e to signal if key is Missing or bad key
        }

        public static #CLASSNAME# Bury(string key)
        {
            if (key.Length == 0) return Null(); 

            Neo.SmartContract.Framework.Services.Neo.StorageContext ctx = Neo.SmartContract.Framework.Services.Neo.Storage.CurrentContext;
            string _skeyTag = key + _classKeyTag;

            #CLASSNAME# e;
            byte[] bsta = Neo.SmartContract.Framework.Services.Neo.Storage.Get(ctx, _skeyTag + _sSTA);
            if (NeoTrace.RUNTIME) TraceRuntime("Bury(skey).#CLASSNAME#.bsta", bsta.Length, bsta);
            if (bsta.Length == 0)
            {
                e = #CLASSNAME#.Missing();
            }
            else // not MISSING - bury it
            {
                e = #CLASSNAME#.Tombstone(); // but don't overwrite existing field values - just tombstone it
                Neo.SmartContract.Framework.Services.Neo.Storage.Put(ctx, _skeyTag + _sSTA, e._state.AsBigInteger());
